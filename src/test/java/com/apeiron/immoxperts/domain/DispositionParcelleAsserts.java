package com.apeiron.immoxperts.domain;

import static com.apeiron.immoxperts.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class DispositionParcelleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositionParcelleAllPropertiesEquals(DispositionParcelle expected, DispositionParcelle actual) {
        assertDispositionParcelleAutoGeneratedPropertiesEquals(expected, actual);
        assertDispositionParcelleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositionParcelleAllUpdatablePropertiesEquals(DispositionParcelle expected, DispositionParcelle actual) {
        assertDispositionParcelleUpdatableFieldsEquals(expected, actual);
        assertDispositionParcelleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositionParcelleAutoGeneratedPropertiesEquals(DispositionParcelle expected, DispositionParcelle actual) {
        assertThat(actual)
            .as("Verify DispositionParcelle auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositionParcelleUpdatableFieldsEquals(DispositionParcelle expected, DispositionParcelle actual) {
        assertThat(actual)
            .as("Verify DispositionParcelle relevant properties")
            .satisfies(a -> assertThat(a.getIddispopar()).as("check iddispopar").isEqualTo(expected.getIddispopar()))
            .satisfies(a ->
                assertThat(a.getDcntagri()).as("check dcntagri").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getDcntagri())
            )
            .satisfies(a ->
                assertThat(a.getDcntsol()).as("check dcntsol").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getDcntsol())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDispositionParcelleUpdatableRelationshipsEquals(DispositionParcelle expected, DispositionParcelle actual) {
        // empty method
    }
}
